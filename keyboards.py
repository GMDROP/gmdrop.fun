from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
from config import PAGINATION_ACTIVE_LOTS, ORDERS_CHAT_LINK, bot_username
from math import ceil

main_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='–†–û–ó–´–ì–†–´–®–ò'),
    KeyboardButton(text='–î–£–≠–õ–¨'),
    KeyboardButton(text='–ü–†–û–§–ò–õ–¨'),
).add(
    KeyboardButton(text='–¢–û–ü 10'),
    KeyboardButton(text='–ü–†–û–ú–û–ö–û–î'),
    KeyboardButton(text='–†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê'),
).add(
    KeyboardButton(text='–ü–†–ê–í–ò–õ–ê'),
    KeyboardButton(text='–ü–û–î–î–ï–†–ñ–ö–ê'),
    KeyboardButton(text='–û–¢–ó–´–í–´'),
).add(
    KeyboardButton(text='–ö–ê–ö –ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø –ë–û–¢–û–ú'),
)


def active_lots_keyboard(lots: list, page, user_lots=False):
    keyboard = InlineKeyboardMarkup()
    buttons = []
    for lot_id, name in lots[page * PAGINATION_ACTIVE_LOTS: page * PAGINATION_ACTIVE_LOTS + PAGINATION_ACTIVE_LOTS]:
        buttons.append(InlineKeyboardButton(text=name, callback_data=f'lot_data_{lot_id}'))

    keyboard.row_width = 1
    keyboard.add(*buttons)

    keyboard.row_width = 3

    if user_lots:
        callback_page_start = 'lots_my_page'
    else:
        callback_page_start = 'lots_page'

    keyboard.add(
        InlineKeyboardButton(text='<<<', callback_data=f'{callback_page_start}_{page-1}'),
        InlineKeyboardButton(text=f'{page+1}/{ceil(len(lots)/PAGINATION_ACTIVE_LOTS)}', callback_data='main_menu'),
        InlineKeyboardButton(text='>>>', callback_data=f'{callback_page_start}_{page+1}'),
    )

    return keyboard


def lot_keyboard(lot_id, is_admin=False):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton(text='üü¢ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ üü¢', callback_data=f'take_part_in_{lot_id}'),
        InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π', callback_data='back_to_list'),
    )

    if is_admin:
        keyboard.add(
            InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ª–æ—Ç', callback_data=f'admin_delete_lot_{lot_id}'),
            InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞', callback_data=f'admin_mail_lot_{lot_id}')
        )

    return keyboard


def lot_channel_keyboard(lot_id):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ', callback_data=f'channel_take_part_in_{lot_id}'),
    )

    return keyboard


def lot_choose_winner_method(lot_id):
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏', callback_data=f'lot_choose_winner_random_{lot_id}'),
        InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≤ —Ä—É—á–Ω—É—é', url=f'https://t.me/{bot_username}?start=set_winner_lot_id={lot_id}'),
    )

    return keyboard


def help_contact(help_link):
    keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton(text='–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', url=help_link)
    )

    return keyboard


def orders_chat_keyboard(review):
    keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç', url=ORDERS_CHAT_LINK)
    )

    if review:
        keyboard.add(
            InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –û—Ç–∑—ã–≤', callback_data='write_review')
        )

    return keyboard


top_up = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='top_up')
)

cabinet_keyboard = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='top_up'),
    InlineKeyboardButton(text='–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤—ã–≤–æ–¥ YC', callback_data='withdrawal'),
    InlineKeyboardButton(text='–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤—ã–≤–æ–¥ G', callback_data='withdrawal_G'),
    InlineKeyboardButton(text='–û–±–º–µ–Ω—è—Ç—å YC –Ω–∞ G', callback_data='change_yc_to_g'),
    InlineKeyboardButton(text='–ú–æ–∏ —É—á–∞—Å—Ç–∏—è', callback_data='my_lots')
)

duels_keyboard = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton(text='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data='duels_registration'),
    InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', callback_data='duels_list_select'),
    InlineKeyboardButton(text='–ú–æ–∏ –¥—É—ç–ª–∏', callback_data='duels_my'),
    InlineKeyboardButton(text='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data='duels_info'),
)

duels_bet_type = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ', callback_data='duels_list_free'),
    InlineKeyboardButton(text='–ü–ª–∞—Ç–Ω—ã–µ', callback_data='duels_list_paid'),
)

duels_confirm_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'),
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å'),
)


def list_duels_keyboard(duels: list, page=0, free=False):
    keyboard = InlineKeyboardMarkup()

    for duel_id, status, bet, game_mode in duels[page*10:page*10+10]:
        keyboard.add(
            InlineKeyboardButton(text=f'{bet} YC | {game_mode}', callback_data=f'duel_info_{duel_id}')
        )

    if free:
        keyboard.add(
            InlineKeyboardButton(text='<<<', callback_data=f'duel_list_free_page_{page-1}'),
            InlineKeyboardButton(text=f'{page+1}/{ceil(len(duels)/10)}', callback_data='main_menu'),
            InlineKeyboardButton(text='>>>', callback_data=f'duel_list_free_page_{page+1}'),
        )
    else:
        keyboard.add(
            InlineKeyboardButton(text='<<<', callback_data=f'duel_list_paid_page_{page-1}'),
            InlineKeyboardButton(text=f'{page+1}/{ceil(len(duels)/10)}', callback_data='main_menu'),
            InlineKeyboardButton(text='>>>', callback_data=f'duel_list_paid_page_{page+1}'),
        )

    return keyboard


def duel_take_part_keyboard(duel_id):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton(text='–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å', callback_data=f'duel_take_part_{duel_id}')
    )

    return keyboard


def duel_request_keyboard(duel_id, from_user_id):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞', callback_data=f'duel_req_con_{duel_id}_{from_user_id}'),
        InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'duel_req_rej_{duel_id}_{from_user_id}')
    )

    return keyboard


def my_list_duels_keyboard(duels: list):
    keyboard = InlineKeyboardMarkup(row_width=1)

    for duel_id, status, bet, game_mode in duels:
        if status == 'wait':
            label = 'üïô'
        elif status == 'progress':
            label = '‚ñ∂Ô∏è'
        elif status == 'end':
            label = 'üîö'
        else:
            label = ''

        keyboard.add(
            InlineKeyboardButton(text=f'{label} {bet} YC | {game_mode}', callback_data=f'duel_my_info_{duel_id}')
        )

    return keyboard


def duel_cancel_keyboard(duel_id):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'duel_cancel_{duel_id}')
    )

    return keyboard


def duel_result_keyboard(duel_id, free=False):
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton(text='–Ø –ø—Ä–æ–∏–≥—Ä–∞–ª', callback_data=f'duel_res_lose_{duel_id}'),
        InlineKeyboardButton(text='–Ø –≤—ã–∏–≥—Ä–∞–ª', callback_data=f'duel_res_win_{duel_id}')
    )

    if free:
        keyboard.add(InlineKeyboardButton(text='–ê–ø–µ–ª–ª—è—Ü–∏—è', url=f'https://t.me/ylionadmin'))

    return keyboard


game_modes_keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(
    KeyboardButton(text='–ö–æ–º–∞–Ω–¥–Ω—ã–π –ë–æ–π'),
    KeyboardButton(text='–°–æ—é–∑–Ω–∏–∫–∏'),
    KeyboardButton(text='–°–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π'),
    KeyboardButton(text='–≠—Å–∫–∞–ª–∞—Ü–∏—è'),
    KeyboardButton(text='–ì–æ–Ω–∫–∞ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–π'),
    KeyboardButton(text='–ê—Ä–∫–∞–¥–∞'),
)


st_ranks_keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=4).add(
    KeyboardButton('BRONZE I'),
    KeyboardButton('BRONZE II'),
    KeyboardButton('BRONZE III'),
    KeyboardButton('BRONZE IV'),
).add(
    KeyboardButton('SILVER I'),
    KeyboardButton('SILVER II'),
    KeyboardButton('SILVER III'),
    KeyboardButton('SILVER IV'),
).add(
    KeyboardButton('GOLD I'),
    KeyboardButton('GOLD II'),
    KeyboardButton('GOLD III'),
    KeyboardButton('GOLD IV'),
).add(
    KeyboardButton('PHOENIX'),
    KeyboardButton('RANGER'),
    KeyboardButton('CHAMPION'),
).add(
    KeyboardButton('MASTER'),
    KeyboardButton('ELITE'),
    KeyboardButton('THE LEGEND'),
)

top_up_methods_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='–£–ö–† üá∫üá¶ –ö–∞—Ä—Ç—ã:'),
    KeyboardButton(text='RU üá∑üá∫ –ö–∞—Ä—Ç—ã:'),
    KeyboardButton(text='TETHER $ ‚ÄúUSDT‚Äù'),
).add(
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
)

currencies_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='UAH'),
    KeyboardButton(text='RUB'),
).add(
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
)

all_currencies_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='UAH'),
    KeyboardButton(text='RUB'),
    KeyboardButton(text='USD'),
).add(
    KeyboardButton(text='G'),
).add(
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
)


confirm_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='–í–µ—Ä–Ω–æ'),
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
)

cancel_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
)

yes_or_no_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='–î–∞'),
    KeyboardButton(text='–ù–µ—Ç'),
).add(
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')

)

payment_confirmed = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='–ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω', callback_data='1')
)

payment_confirmed_by_hands = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='–ü–ª–∞—Ç–µ–∂ –Ω–∞—á–∏—Å–ª–µ–Ω –∞–¥–º–∏–Ω–æ–º', callback_data='1')
)

payment_canceled = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='–ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω', callback_data='1')
)

withdrawal_confirm_keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1).add(
    KeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–≤–æ–¥'),
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å'),
)


def withdrawal_admin_keyboard(withdrawal_id):
    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', callback_data=f'admin_withdrawal_confirm_{withdrawal_id}'),
        InlineKeyboardButton(text='–û—Ç–∫–∞–∑', callback_data=f'admin_withdrawal_reject_{withdrawal_id}')
    )


withdrawal_confirmed = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='–í—ã–≤–æ–¥ –æ–ø–ª–∞—á–µ–Ω', callback_data='1')
)


withdrawal_canceled = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='–í—ã–≤–æ–¥ –æ—Ç–∫–∞–∑–∞–Ω', callback_data='1')
)

promo_code_types_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton(text='–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ'),
    KeyboardButton(text='–ü—Ä–æ—Ü–µ–Ω—Ç –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é')
).add(
    KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å'),
)

admin_keyboard = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à', callback_data='admin_create_lot'),
    InlineKeyboardButton(text='–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è', callback_data='admin_user_profile'),
    InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ', callback_data='admin_edit_bot_data'),
    InlineKeyboardButton(text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='admin_count_users'),
    InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞', callback_data='admin_mail'),
    InlineKeyboardButton(text='–ü—Ä–æ–º–æ–∫–æ–¥—ã', callback_data='admin_promo_codes'),
    InlineKeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥—É—ç–ª–∏', callback_data='admin_duel')
)

manager_keyboard = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥—É—ç–ª–∏', callback_data='admin_duel')
)

admin_promo_codes_keyboard = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', callback_data='admin_add_promo_code'),
    InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤', callback_data='admin_promo_codes_list'),
    InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='admin_back'),
)


def generate_active_promo_codes_keyboard(active_promo_codes: list):
    keyboard = InlineKeyboardMarkup(row_width=1)

    buttons = []

    for promo_id, name in active_promo_codes:
        buttons.append(
            InlineKeyboardButton(text=name, callback_data=f'admin_edit_promo_{promo_id}')
        )

    keyboard.add(*buttons)

    return keyboard


def edit_promo_code(promo_id):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton(text='–†–µ–¥. –∫–æ–ª. –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π', callback_data=f'promo_edit_activations_{promo_id}'),
        InlineKeyboardButton(text='–†–µ–¥. –ø—Ä–æ—Ü–µ–Ω—Ç/–∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç', callback_data=f'promo_edit_amount_{promo_id}'),
        InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data=f'promo_edit_delete_{promo_id}'),
    )

    return keyboard


def admin_edit_user_data(user_id):
    keyboard = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(text='–ó–∞–±–∞–Ω–∏—Ç—å/–†–∞–∑–±–∞–Ω–∏—Ç—å', callback_data=f'admin_edit_user_ban_{user_id}'),
        InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ë–∞–ª–∞–Ω—Å', callback_data=f'admin_edit_user_balance_{user_id}'),
        InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –£—Ä–æ–≤–µ–Ω—å', callback_data=f'admin_edit_user_level_{user_id}'),
        InlineKeyboardButton(text='–£–±—Ä–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã –Ω–∞ –≤—ã–≤–æ–¥', callback_data=f'admin_edit_user_w_limits_{user_id}'),
    )

    return keyboard


admin_edit_bot_data = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton(text='–†–µ–∫–≤–∏–∑–∏—Ç—ã', callback_data='admin_edit_bot_requisites'),
    InlineKeyboardButton(text='–ö–£–†–°', callback_data='admin_edit_bot_in_currency'),
    InlineKeyboardButton(text='–°—Å—ã–ª–∫–∞ –Ω–∞ –ü–æ–¥–¥–µ—Ä–∂–∫—É', callback_data='admin_edit_bot_help_link'),
    InlineKeyboardButton(text='–¢–µ–∫—Å—Ç –ü—Ä–∞–≤–∏–ª', callback_data='admin_edit_bot_help_text'),
)


def admin_payment_keyboard(payment_id):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂', callback_data=f'admin_payment_confirm_{payment_id}'),
        InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å –≤ —Ä—É—á–Ω—É—é', url=f'https://t.me/{bot_username}?start=payment_id={payment_id}'),
        InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å –ø–ª–∞—Ç–µ–∂', callback_data=f'admin_payment_reject_{payment_id}'),
    )

    return keyboard


def admin_duel_set_result(duel_id):
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton(text='–ü–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ 1', callback_data=f'admin_duel_result_win1_{duel_id}'),
        InlineKeyboardButton(text='–ü–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ 2', callback_data=f'admin_duel_result_win2_{duel_id}')
    )

    keyboard.add(
        InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å —Å—Ç–∞–≤–∫–∏', callback_data=f'admin_duel_result_draw_{duel_id}')
    )

    return keyboard
